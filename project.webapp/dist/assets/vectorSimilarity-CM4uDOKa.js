function p(e,h){if(!e||!h)return 0;const i=e.toLowerCase().split(/\W+/).filter(r=>r.length>2),o=h.toLowerCase().split(/\W+/).filter(r=>r.length>2);if(i.length===0||o.length===0)return 0;const u=i.filter(r=>o.includes(r)),t=[...new Set([...i,...o])],a=t.length>0?u.length/t.length:0,l={},w={};i.forEach(r=>l[r]=(l[r]||0)+1),o.forEach(r=>w[r]=(w[r]||0)+1);const c=[...new Set([...i,...o])];let n=0,s=0,f=0;c.forEach(r=>{const m=l[r]||0,y=w[r]||0;n+=m*y,s+=m*m,f+=y*y});const v=s>0&&f>0?n/(Math.sqrt(s)*Math.sqrt(f)):0,d=C(e),g=C(h),L=d.filter(r=>g.includes(r)).length,V=d.length+g.length>0?2*L/(d.length+g.length):0,W=a*.3+v*.4+V*.3;return Math.min(1,Math.max(0,W))}function C(e){const h=e.toLowerCase().split(/\W+/).filter(t=>t.length>3),i=new Set(["the","and","for","with","that","this","they","have","from","their","will","would","could","should","been","said","each","which","she","do","how","her","if","go","me","my","has","but","our","one","other","out","so","than","too","use","very","want","way","well","what","when","where","who","why","year","your","can","just","now","over","take","then","them","these","those","upon","us","was","were","word","work","world","would","write","written","yet"]),o=h.filter(t=>!i.has(t)),u={};return o.forEach(t=>u[t]=(u[t]||0)+1),Object.entries(u).sort(([,t],[,a])=>a-t).slice(0,10).map(([t])=>t)}async function A(e,h){if(e.length===0)return e;try{console.log("[Vector Similarity] Calculating similarities for",e.length,"Q&A pairs");const i=e.map((o,u)=>{let t=0,a=0,l=0;if(e.length>1){const c=e.filter((n,s)=>s!==u).map(n=>n.question).map(n=>p(o.question,n));t=c.length>0?c.reduce((n,s)=>n+s,0)/c.length:0}if(e.length>1&&o.answer){const c=e.filter((n,s)=>s!==u&&e[s].answer).map(n=>n.answer).map(n=>p(o.answer,n));a=c.length>0?c.reduce((n,s)=>n+s,0)/c.length:0}return h&&o.answer&&(l=p(o.answer,h)),{...o,questionSimilarity:t,answerSimilarity:a,contentSimilarity:l,questionConfidence:S(t),answerConfidence:S(a),contentConfidence:S(l),vectorSimilarity:l?`${(l*100).toFixed(1)}%`:null}});return console.log("[Vector Similarity] Successfully updated",i.length,"Q&A pairs with similarity data"),i}catch(i){return console.error("[Vector Similarity] Error calculating similarities:",i),e}}function S(e){return e>=.9?"Very High":e>=.8?"High":e>=.7?"Good":e>=.6?"Moderate":e>=.5?"Low":"Very Low"}export{A as calculateAndUpdateVectorSimilarities,S as getConfidenceLevel};
